- Flask(플라스크): 
'마이크로 웹 프레임워크'라고 부르며 심플한 특징으로 인해 프레임워크를 간결하게 유지하고 확장할 수 있는 장점이 존재함.
Flask에는 form, DB를 처리하는 기능이 따로 포함되어 있지 않다. (Django는 존재함) 그러나 확장 모듈을 통해 이러한 단점을 보완할 수 있고,
해당 기능들이 없는 만큼 가벼운 프레임워크를 유지할 수 있는 장점도 있다.(필요한 모듈만 추가해가면서 개발이 가능)

- Python Virtual Environment(파이썬 가상 환경)
파이썬 가상 환경은 파이썬 프로젝트를 진행할 때 독립된 환경을 만들어 주는 도구.
(ex. 프로젝트 A에서는 파이썬 2.1버전을 사용해야 되는데, 프로젝트 B에서는 파이썬 3.1버전을 사용해서 개발이 필요할 때 각각의 가상환경을 만들어주면
쉽게 해결 가능)

python -m venv {프로젝트명} > 프로젝트명으로 가상환경 생성
cd {프로젝트명}/Scripts 경로로 이동하고 activate 명령어를 실행하면 가상환경 cmd 진입 완료. (deactivate로 탈출 가능)

- 배치 파일(window 기준)
.cmd나 .bat 확장자 파일을 의미함.
배치 파일은 여러 명령어를 한번에 실행해주는 파일이고, 번거로운 명령어 작업을 쉽게 자동화해주는 작업임. (리눅스 환경에서 특정 기간, 시간대, 일정에 따라 
주기적으로 실행하는 용도로도 많이 사용)

배치 파일을 만들었으면 윈도우 환경변수에 추가해야한다. 해당 배치 파일이 위치한 경로를 PATH에 추가해줌.
이후 cmd창에서 해당 배치파일의 파일명만(확장자 생략) 입력해도 배치파일에 작성된 명령어 실행됨.

- Flask 관련 개념
app = Flask(__name__) 은 플라스크 애플리케이션을 생성하는 코드
(cmd창) flask run 명령어는 플라스크 서버를 실행
* FLASK_ENV는 과거 환경변수로 현재 사용 불가 > FLASK_DEBUG로 사용해야함
FLASK_APP = pybo 명령어는 플라스크 기본 애플리케이션을 pybo로 지정
request 객체: 브라우저의 요청부터 응답까지 처리 구간에서 request 객체를 생성하여 사용할 수 있음

- Flask 템플릿 상속(extends)기능
기본 base가 되는 html 템플릿을 구현한 후 body 부분에 상송받을 영역을 지정해주면 된다.
ex. 
<body>
<!-- 기본 템플릿 안에 삽입될 내용 Start -->
{% block content %}
{% endblock %}
<!-- 기본 템플릿 안에 삽입될 내용 End -->
</body>

{% block content %}와 {% endblock %}가 있는 부분이 상속할 부분이고, 이제 다른 html파일에서 최상단에 {% extends 'base.html' %}과 {% block content %}을 작성하고
구현할 내용을 작성한 후 마지막에 {% endblock %}을 작성하면 자동으로 base 템플릿의 구조를 상속받게 된다.

Q. 왜 굳이 extends를 사용해야 한가?
A. 템플릿 상속을 통해 쉽게 필요한 부분만 수정할 수 있으며, 추가되는 페이지/기능을 상속받은 템플릿의 표준 HTML 구조를 물려받으니 구조적으로 활용도가 좋다.

- 부트스트랩 클래스	설명
card, card-body, card-text	부트스트랩 Card 컴포넌트
badge	부트스트랩 Badge 컴포넌트
form-control, form-label	부트스트랩 Form 컴포넌트
border-bottom	아래방향 테두리 선
my-3	상하 마진값 3
py-2	상하 패딩값 2
p-2	상하좌우 패딩값 2
d-flex justify-content-end	컴포넌트의 우측 정렬
bg-light	연회색 배경
text-dark	검은색 글씨
text-start	좌측 정렬
btn btn-primary	부트스트랩 버튼 컴포넌트

- 웹 프로그램에서 Form
폼은 사용자에게 입력 양식을 편리하게 제공하기 위해 사용.

- Flask-WTF 라이브러리(폼)
플라스크에서 폼을 사용하려면 pip install Flask-WTF을 통해 라이브러리를 설치
Flask-WTF 라이브러리를 사용하려면 플라스크 환경변수 SECRET_KEY가 필요하다.
SECRET_KEY는 CSRF(cross-site request forgery)라는 웹 사이트 취약점 공격을 방지 기능 사용.
SECRET_KEY 기반으로 생성되는 CSRF 토큰은 폼으로 전송된 데이터가 실제 웹 페이지에서 작성된 데이터인지 판단.

- 게시판 페이징
페이징(paging)이란? 
> 많은 양의 글을 효율적으로 표현하고 탐색할 수 있게 도와주는 기능. 
사용자가 글을 빠르게 찾을 수 있도록 도와주고, 서버의 부하를 줄이는 데에도 도움.

- 회원 가입 기능 개발(Sign up)
웹 프로그래밍의 가장 핵심 기능 중 하나인 회원가입 기능.
회원가입 기능을 구현하기 위해 회원 정보를 위한 모델 구현.

회원 모델에서 unique=True는 중복 데이터를 허용하지 않게 해주는 옵션.

- flask 리비전
flask db migrate를 실행하면 리비전 파일 생성된다.
이후 flask db upgrade 를 실행하면 리비전 파일을 적용하려다가 실패하면 기존 리비전 파일이 남아있다. 
flask db stamp heads 를 통해 기존 리비전 파일에서 최신 버전으로 변경 가능. 
